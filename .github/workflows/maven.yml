name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
permissions:
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: 'Checkout Repository'
      uses: actions/checkout@v4
    - name: Dependency Review
      uses: actions/dependency-review-action@v2
      with:
        fail-on-severity: critical
        allow-licenses: MIT, Apache-2.0, ISC, BSD-2-Clause, 0BSD, NOASSERTION
        base-ref: ${{ github.event.pull_request.base.sha || 'master' }}
        head-ref: ${{ github.event.pull_request.head.sha || github.ref }}

    # - name: Get Current Version
    #   id: get_version
    #   run: |
    #     VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
    #     echo "Current Version: $VERSION"
    #     IFS='.' read -r -a VERSION_PARTS <<< "${VERSION}"
    #     MAJOR=${VERSION_PARTS[0]}
    #     MINOR=${VERSION_PARTS[1]}
    #     PATCH=${VERSION_PARTS[2]}

    #     echo "PATCH: $PATCH"

    #     if [[ $VERSION == *"-SNAPSHOT" ]]; then
    #         BASE_VERSION="1.0.0"
    #         NEW_PATCH=$((PATCH + 1))
    #         NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH}"
    #     else
    #         BASE_VERSION="${VERSION}"
    #         NEW_VERSION="${VERSION}"
    #     fi

    #     echo "New Patch Version: $NEW_PATCH"
    #     echo "New Version: $NEW_VERSION"
    #     mvn versions:set -DnewVersion=${NEW_VERSION}
    #     IVERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
    #     echo "Updated Version: $IVERSION"

    # - name: Commit Version Change
    #   if: github.ref == 'refs/heads/master'
    #   run: |
    #     git config --global user.name 'GitHub Actions'
    #     git config --global user.email 'actions@github.com'
    #     git add pom.xml
    #     git commit -m 'Increment patch version' || echo "No changes to commit"
    #     git push

    # - name: Build with Maven
    #   run: mvn -B package --file pom.xml

    # - name: Login to Docker Hub
    #   uses: docker/login-action@v3
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v3

    # - name: Build and push
    #   uses: docker/build-push-action@v6
    #   with:
    #     push: true
    #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/clockbox:latest
      
    # - name: SSH to VM and Run Docker Commands
    #   env:
    #     SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
    #     HOST: ${{ secrets.SSH_HOST }}
    #     USER: ${{ secrets.SSH_NAME }}
    #     DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    #     DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
    #   run: |
    #     echo "$SSH_PRIVATE_KEY" > private_key.pem
    #     chmod 600 private_key.pem

        # ssh -i private_key.pem -o StrictHostKeyChecking=no $USER@$HOST "docker run $DOCKERHUB_USERNAME/clockbox:latest && exit"
        #   echo "Connected to VM"
        #   # sudo docker login -u="${DOCKERHUB_USERNAME}" -p="${DOCKERHUB_PASSWORD}"
        #   sudo docker pull $DOCKERHUB_USERNAME/clockbox:latest
        #   sudo docker run $DOCKERHUB_USERNAME/clockbox:latest
        # EOF
